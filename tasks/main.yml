---
# tasks file for ansible-lxc

# specify the packages to install
- name: load OS specific variables (see ../vars/*)
  include_vars: "{{ ansible_os_family }}.yml"

- name: install lxc and lxd ppa (ubuntu)
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - 'ppa:ubuntu-lxc/lxc-stable'
    - 'ppa:ubuntu-lxc/lxd-stable'
  when: ansible_distribution == 'Ubuntu'

- name: install packages
  package: name={{ lxc_pkgs }} state={{ lxc_pkg_state }}

- name: create missing directories for each unprivileged users
  file:
    path: /home/{{ item[0] }}/{{ item[1] }}
    owner: "{{ item[0] }}"
    group: "{{ item[0] }}"
    mode: 0755
    state: directory
  with_nested:
    - "{{ lxc_users }}"
    - "{{ lxc_directories }}"

- name: touch missing files
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0644
    state: touch
  with_items:
    - /etc/subuid
    - /etc/subgid
  when: ansible_distribution != 'Ubuntu'

  # LXC configuration is split in two parts:
  #   - container ( /etc/lxc/default.conf | ~/.config/lxc/default.conf )
  #   - system  ( /etc/lxc/lxc.conf | ~/.config/lxc/lxc.conf )
  #
  # And:
  #   - /etc/lxc/lxc-usernet (unprivileged user network administration file)

# file is placed inside user home to allow creation of unprivileged containers
- name: template ~/.config/lxc/default.conf (user default container conf)
  template:
    src: user_default.conf.j2
    dest: "/home/{{ item }}/.config/lxc/default.conf"
    backup: yes
    mode: 0644
    owner: "{{ item }}"
    group: "{{ item }}"
  with_items: lxc_users

# file is placed inside user home to allow creation of unprivileged containers
- name: template ~/.config/lxc/lxc.conf (path and storage BE)
  template:
    src: lxc.conf.j2
    dest: "/home/{{ item }}/.config/lxc/lxc.conf"
    backup: yes
    mode: 0644
    owner: "{{ item }}"
    group: "{{ item }}"
  with_items: lxc_users

- name: template system-wide default.conf, lxc.conf and lxc-usernet
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: yes
    mode: 0644
    owner: root
    group: root
  with_items:
    - { src: default.conf.j2, dest: /etc/lxc/default.conf }
    - { src: lxc.conf.j2, dest: /etc/lxc/lxc.conf }
    - { src: lxc-usernet.j2, dest: /etc/lxc/lxc-usernet }

# - name: configure lxc-net on Ubuntu derivatives
#   template:
#     src: lxc-net.j2
#     dest: /etc/default/lxc-net
#     owner: root
#     group: root
#     mode: 0644
#     backup: yes
#   when: ansible_distribution == 'Ubuntu'

# - name: add entry in dnsmasq.conf to allow DNS resolution
#   lineinfile:
#     dest: /etc/dnsmasq.conf
#     regexp: ^#?server=/\w/\d{3}.*
#     instertafter: ^#server=/localnet/192.168.0.1
#     line: server=lxc/{{ lxc_net_addr }}/
#     backup: yes
#   handlers: restart dnsmasq

# # this is to run unprivileged containers
# # fixme: allocate additional uids & and gids to a username
# sudo usermod --add-subuids 100000-165536 username
# sudo usermod --add-subgids 100000-165536 username

# - name: Ensure networking includes interfaces.d
#   lineinfile:
#     dest: "/etc/network/interfaces"
#     line: "source /etc/network/interfaces.d/*.conf"
#     backup: "yes"
#   when: ansible_distribution == 'Ubuntu'

# - name: Template lxc bridge configuration
#   template:
#     src: "{{ item.src }}"
#     dest: "{{ item.dest }}"
#     owner: "{{ item.owner|default('root') }}"
#     group: "{{ item.group|default('root') }}"
#     mode: "{{ item.mode|default('0644') }}"
#   with_items:
#   - { src: lxc-bridge.cfg.j2, dest: "/etc/network/interfaces.d/lxc-bridge.cfg" }
#   when: ansible_distribution == 'Ubuntu'
