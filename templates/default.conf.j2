# {{ ansible_managed }}

# container defaults. see man lxc.container.conf

# NETWORK The network section defines how the network is virtualized in the
#   container. The network virtualization acts at layer two. In order to use the
#   network virtualization, parameters must be specified to define the network
#   inter‐faces of the container. Several virtual interfaces can be assigned
#   and used in a container even if the system has only one physical network
#   interface.
#
#   lxc.network.type specify  what kind of network virtualization to be used for
#   the container. Each time a lxc.network.type field is found a new round of
#   network configuration begins. In this way, several network virtualization
#   types can be specified for the same container, as well as assigning several
#   network interfaces for one container. The different virtualization types can
#   be:
#
#   none: will cause the container to share the host's network namespace. This
#   means the host network devices are usable in the container. It also means
#   that if both the container and host have upstart as init, 'halt'  in a
#   container (for instance) will shut down the host.
#
#   empty: will create only the loopback interface.
#
#   veth:  a virtual ethernet pair device is created with one side assigned to
#   the container and the other side attached to a bridge specified by the
#   lxc.network.link option. If the bridge is not specified, then the veth pair
#   device will be created but not attached to any bridge. Otherwise, the bridge
#   has to be created on the system before starting the container.  lxc won't
#   handle any configuration  outside of  the  container.   By default, lxc
#   chooses  a  name for the network device belonging to the outside of the
#   container, but if you wish to handle this name yourselves, you can tell lxc
#   to set a specific name with the lxc.network.veth.pair option (except for
#   unprivileged containers where this option is ignored for security reasons).
#
#   vlan: a vlan interface is linked with the interface specified by the
#   lxc.network.link and assigned to the container. The vlan identifier is
#   specified with the option lxc.network.vlan.id.
#
#   macvlan: a macvlan interface is linked with the interface specified by the
#   lxc.network.link and assigned to the container. lxc.network.macvlan.mode
#   specifies the mode the macvlan will use to communicate between  dif‐ ferent
#   macvlan on the same upper device. The accepted modes are private, the
#   device never communicates with any other device on the same upper_dev
#   (default), vepa, the new Virtual Ethernet Port Aggregator (VEPA) mode, it
#   assumes that the adjacent bridge returns all frames where both source and
#   destination are local to the macvlan port, i.e. the bridge is set up as a
#   reflective relay. Broadcast frames coming in  from  the  upper_dev get
#   flooded to all macvlan interfaces in VEPA mode, local frames are not
#   delivered locally, or bridge, it provides the behavior of a simple bridge
#   between different macvlan interfaces on the same port. Frames from one
#   interface to another one get delivered directly and are not sent out
#   externally. Broadcast frames get flooded to all other bridge ports and to
#   the external interface, but when they come back from a reflective relay, we
#   don't deliver them again. Since we know all the MAC addresses, the macvlan
#   bridge mode does not require learning or STP like the bridge module does.
#
#   phys: an already existing interface specified by the lxc.network.link is
#   assigned to the container.

lxc.network.type = {{ lxc_network_type|default('veth') }}

# specify the interface to be used for real network traffic
lxc.network.link = {{ lxc_network_link|default('virbr0') }}

# specify an action to do for the network, up: activates the interface.
lxc.network.flags = {{ lxc_network_flags|default('up') }}

# the interface mac address is dynamically allocated by default to the virtual
# interface, but in some cases, this is needed to resolve a mac address
# conflict or to always have the same link-local ipv6 address.  Any  "x"
# in address will be replaced by random value, this allows setting
# hwaddr templates.
lxc.network.hwaddr = {{ lxc_network_hwaddr|default('00:16:3e:xx:xx:xx') }}
